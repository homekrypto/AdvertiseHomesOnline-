User Registration & Login

Implementation Checks:

 Registration form (email/password, magic link, SSO for Expert/Enterprise) implemented in frontend.

 Email verification + 2FA integrated.

 Stripe integration for paid plans (trial, coupon, direct payment).

 Backend stores users in DynamoDB Users table with role, subscription plan, device/IP logs.

 API endpoint /register validates input and creates user.

 Test: Register Free, Agent, Premium, Agency, Expert → Verify user appears correctly in DB with subscription tier.

 Test: Email verification triggers properly and allows login.

 Test: Stripe payments succeed and subscription plan recorded in DB.

2. Post-Login: Dashboard Access

Implementation Checks:

 API endpoint /login authenticates user, generates JWT with role and plan.

 Frontend fetches dashboard data based on role + plan.

 Role-based dashboard routing implemented:

Free / Premium → Browse properties, saved searches, alerts, analytics (Premium).

Agent → Property management, inbox, analytics, featured credits.

Agency → Team management, bulk import, lead routing, branding.

Expert → AI Hub, automation, predictive analytics, API integrations.

 Test: Log in as each role → Confirm correct dashboard loads with proper UI and features.

 Test: Unauthorized access blocked for restricted dashboards.

3. Adding a New Property (Agent / Agency)

Implementation Checks:

 Dashboard “Add Property” button visible only for eligible tiers (Agent, Agency, Expert).

 Form fields dynamically adjust based on user plan: limits, AI suggestions, auto-blog options.

 Property media uploads to S3 + CloudFront.

 API endpoint /properties/create validates and stores property in DynamoDB Properties table with all metadata and media URLs.

 Analytics initialized (views, saves, CTR) in DynamoDB or analytics service.

 Optional features implemented per plan: featured credits, bulk import, AI pricing/recommendations.

 Test: Add property with each eligible plan → Verify DB entry, media storage, analytics, feature limits.

 Test: Unauthorized plans cannot access Add Property → returns 403 / error.

4. Lead & Analytics Integration

Implementation Checks:

 Lead routing endpoint /leads/create routes leads automatically based on agent/agency settings.

 Analytics updates (views, saves, CTR) are real-time on dashboard via API endpoints /analytics/properties/{id}.

 Notifications sent via SES/SNS when a new lead is generated.

 Test: Lead created for Agent → appears in Agent inbox, analytics updates.

 Test: Lead created for Agency → routed to correct team member.

 Test: Notifications sent properly.

✅ Key Integration Points

All dashboard features must query live DynamoDB data, not mock data.

Frontend, backend, database, and media storage fully connected.

API endpoints should be properly routed and secured for role and subscription checks.

CRUD operations must be tested end-to-end, including media upload, analytics, and notifications.

RBAC enforcement verified: restricted actions blocked based on role/tier.

Stripe payments fully integrated → subscription plan reflected in dashboard features.